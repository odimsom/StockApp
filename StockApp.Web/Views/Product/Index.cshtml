@model List<StockApp.Aplication.ViewModel.ProductViewModel>
@{
    ViewData["Title"] = "Home Page";
}
<div class="product-album">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center">
            <h2 class="page-title">
                <i class="fas fa-boxes me-2"></i>Mantenimiento De Productos
            </h2>
            <a class="btn btn-outline-success btn-success page-title text-light" asp-area="" asp-controller="Product" asp-action="Create">Agregar Nuevo Producto</a>
        </div>
        <div class="row">
            @if (Model.Count != 0 && Model != null)
            {
                @foreach (var i in Model)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="product-card card h-100">
                            <div class="product-img-container">
                                <img src="@i.UrlImage" class="card-img-top product-img" alt="Laptop Ultradelgada X1">
                                <span class="product-badge">Nuevo</span>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@i.Name</h5>
                                <p class="card-text">@i.Description</p>
                                <div class="product-price">
                                    <span class="price-tag">@i.Price.ToString("c")</span>
                                </div>
                            </div>
                            <div class="card-footer d-flex justify-content-between">
                                <a asp-controller="Product" asp-action="Update" asp-route-id="@i.Id" class="btn btn-sm btn-primary">Editar</a>
                                <a asp-controller="Product" asp-action="Delete" asp-route-id="@i.Id" class="btn btn-sm btn-outline-secondary btn-danger">Elimiar</a>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <h1>Product Not Found</h1>
            }
        </div>
    </div>
</div>

<style>
    /* Estilos específicos del componente de álbum de productos */
    .product-album {
        padding: 1rem 0;
    }

    .product-card {
        transition: all 0.3s ease;
        border: none;
        overflow: hidden;
    }

        .product-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 10px 20px rgba(60, 77, 147, 0.15);
        }

    .product-img-container {
        position: relative;
        overflow: hidden;
        height: 200px;
    }

    .product-img {
        object-fit: cover;
        height: 100%;
        width: 100%;
        transition: transform 0.5s ease;
    }

    .product-card:hover .product-img {
        transform: scale(1.05);
    }

    .product-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: var(--primary);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .product-badge-sale {
        background-color: #e74c3c;
    }

    .card-title {
        font-weight: 600;
        color: var(--primary);
        margin-bottom: 0.5rem;
    }

    .category-tag {
        font-size: 0.85rem;
        color: var(--secondary);
        margin-bottom: 1rem;
    }

    .product-price {
        display: flex;
        align-items: center;
        margin-top: 1rem;
    }

    .price-tag {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--primary);
    }

    .original-price {
        text-decoration: line-through;
        color: #999;
        margin-left: 0.75rem;
        font-size: 0.9rem;
    }

    .page-item.active .page-link {
        background-color: var(--primary);
        border-color: var(--primary);
    }

    .page-link {
        color: var(--primary);
    }

        .page-link:hover {
            color: var(--accent-dark);
        }
</style>